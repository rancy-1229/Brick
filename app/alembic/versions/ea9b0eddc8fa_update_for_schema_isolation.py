"""update_for_schema_isolation

Revision ID: ea9b0eddc8fa
Revises: 9b4a955dc3d0
Create Date: 2025-09-03 15:15:30.284397

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'ea9b0eddc8fa'
down_revision: Union[str, None] = '9b4a955dc3d0'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # 1. 先添加schema_name列（允许NULL）
    op.add_column('tenants', sa.Column('schema_name', sa.String(length=63), nullable=True))
    
    # 2. 更新现有租户记录的schema_name
    op.execute("UPDATE tenants SET schema_name = 'tenant_' || tenant_id WHERE schema_name IS NULL")
    
    # 3. 设置schema_name为NOT NULL
    op.alter_column('tenants', 'schema_name', nullable=False)
    
    # 4. 删除其他表的tenant_id列
    op.drop_index('ix_audit_logs_tenant_id', table_name='audit_logs')
    op.drop_column('audit_logs', 'tenant_id')
    op.drop_index('ix_roles_tenant_id', table_name='roles')
    op.drop_column('roles', 'tenant_id')
    op.drop_index('ix_tenant_invitations_tenant_id', table_name='tenant_invitations')
    op.drop_column('tenant_invitations', 'tenant_id')
    
    # 5. 重新创建索引
    op.drop_index('ix_tenants_id', table_name='tenants')
    op.drop_index('ix_tenants_tenant_id', table_name='tenants')
    op.create_index(op.f('ix_public_tenants_id'), 'tenants', ['id'], unique=False, schema='public')
    op.create_index(op.f('ix_public_tenants_schema_name'), 'tenants', ['schema_name'], unique=True, schema='public')
    op.create_index(op.f('ix_public_tenants_tenant_id'), 'tenants', ['tenant_id'], unique=True, schema='public')
    
    # 6. 删除不需要的列
    op.drop_column('tenants', 'created_by')
    op.drop_column('tenants', 'updated_by')
    op.drop_index('ix_user_roles_tenant_id', table_name='user_roles')
    op.drop_column('user_roles', 'tenant_id')
    op.drop_index('ix_users_tenant_id', table_name='users')
    op.drop_column('users', 'tenant_id')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('users', sa.Column('tenant_id', sa.VARCHAR(length=50), autoincrement=False, nullable=False))
    op.create_index('ix_users_tenant_id', 'users', ['tenant_id'], unique=False)
    op.add_column('user_roles', sa.Column('tenant_id', sa.VARCHAR(length=50), autoincrement=False, nullable=False))
    op.create_index('ix_user_roles_tenant_id', 'user_roles', ['tenant_id'], unique=False)
    op.add_column('tenants', sa.Column('updated_by', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('tenants', sa.Column('created_by', sa.INTEGER(), autoincrement=False, nullable=True))
    op.drop_index(op.f('ix_public_tenants_tenant_id'), table_name='tenants', schema='public')
    op.drop_index(op.f('ix_public_tenants_schema_name'), table_name='tenants', schema='public')
    op.drop_index(op.f('ix_public_tenants_id'), table_name='tenants', schema='public')
    op.create_index('ix_tenants_tenant_id', 'tenants', ['tenant_id'], unique=False)
    op.create_index('ix_tenants_id', 'tenants', ['id'], unique=False)
    op.drop_column('tenants', 'schema_name')
    op.add_column('tenant_invitations', sa.Column('tenant_id', sa.VARCHAR(length=50), autoincrement=False, nullable=False))
    op.create_index('ix_tenant_invitations_tenant_id', 'tenant_invitations', ['tenant_id'], unique=False)
    op.add_column('roles', sa.Column('tenant_id', sa.VARCHAR(length=50), autoincrement=False, nullable=False))
    op.create_index('ix_roles_tenant_id', 'roles', ['tenant_id'], unique=False)
    op.add_column('audit_logs', sa.Column('tenant_id', sa.VARCHAR(length=50), autoincrement=False, nullable=False))
    op.create_index('ix_audit_logs_tenant_id', 'audit_logs', ['tenant_id'], unique=False)
    # ### end Alembic commands ###
